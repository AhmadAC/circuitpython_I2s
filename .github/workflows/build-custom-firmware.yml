name: Build Custom CircuitPython Firmware

on:
  workflow_dispatch:
    inputs:
      circuitpython_version:
        description: 'CircuitPython Version (e.g., 9.2.8)'
        required: true
        default: '9.2.8'
      board_name:
        description: 'Target Board Name (e.g., yd_esp32_s3_n16r8)'
        required: true
        default: 'yd_esp32_s3_n16r8'

  push:
    branches:
      - main # Or your preferred branch

jobs:
  build_firmware:
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:v5.1.2 # Or v5.2.1, v5.3.1

    # Set default shell options to apply safe.directory early
    defaults:
      run:
        shell: bash -e {0} # Ensure scripts exit on error

    steps:
    - name: Pre-setup Git Safe Directory
      run: |
        # This path is typically how GitHub Actions sets up the workspace
        WORKSPACE_PATH="/__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}"
        echo "Attempting to mark ${WORKSPACE_PATH} as a safe Git directory globally for the job..."
        # This command is run by the runner's user.
        git config --global --add safe.directory "${WORKSPACE_PATH}"
        # Also try for the generic GITHUB_WORKSPACE which might be slightly different in some contexts
        git config --global --add safe.directory "${GITHUB_WORKSPACE}"


    - name: Checkout CircuitPython Fork & Fetch All Tags
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }} # Checks out YOUR fork
        fetch-depth: 0 # Fetches all history and all tags.
        submodules: 'false' # We will handle submodules after checking out the specific tag

    - name: Get CircuitPython Version from Input or Default
      id: cp_version
      run: echo "version=${{ github.event.inputs.circuitpython_version || '9.2.8' }}" >> $GITHUB_OUTPUT

    - name: Get Board Name from Input or Default
      id: board_info
      run: echo "name=${{ github.event.inputs.board_name || 'yd_esp32_s3_n16r8' }}" >> $GITHUB_OUTPUT

    - name: Checkout Specific Version & Update Submodules
      working-directory: ${{ github.workspace }}
      run: |
        # The safe.directory should ideally be set by the "Pre-setup" step.
        # Re-confirming here is a fallback.
        echo "Re-confirming ${GITHUB_WORKSPACE} as a safe Git directory for this step..."
        git config --global --add safe.directory "${GITHUB_WORKSPACE}"
        
        echo "Available tags (first 20 before explicit fetch):"
        git tag | sort -V | tail -n 20 

        echo "Fetching all tags (again, to be absolutely sure)..."
        git fetch --all --tags --prune --force 
        
        echo "Available tags (first 20 after explicit fetch):"
        git tag | sort -V | tail -n 20 

        echo "Checking out tag: ${{ steps.cp_version.outputs.version }}"
        if git rev-parse --verify --quiet "refs/tags/${{ steps.cp_version.outputs.version }}"; then
          git checkout "tags/${{ steps.cp_version.outputs.version }}"
        else
          echo "Tag ${{ steps.cp_version.outputs.version }} not found directly with 'tags/' prefix, trying without..."
          git checkout "${{ steps.cp_version.outputs.version }}"
        fi
        
        echo "Updating submodules (this may take a while)..."
        git submodule update --init --recursive

    - name: Install CircuitPython's Python Build Dependencies
      working-directory: ${{ github.workspace }}
      run: |
        pip install --upgrade pip
        if [ -f "tools/requirements-build.txt" ]; then
          pip install -r tools/requirements-build.txt
        elif [ -f "requirements-build.txt" ]; then
          pip install -r requirements-build.txt
        else
          echo "WARNING: Build requirements file not found."
        fi

    - name: Modify mpconfigboard.mk for I2SIn (if not already committed)
      working-directory: ${{ github.workspace }}
      run: |
        BOARD_CONFIG_PATH="ports/espressif/boards/${{ steps.board_info.outputs.name }}/mpconfigboard.mk"
        if [ -f "$BOARD_CONFIG_PATH" ]; then
          echo "Modifying $BOARD_CONFIG_PATH to enable I2SIn..."
          sed -i 's/^\(CIRCUITPY_AUDIOBUSIO_I2S_IN\s*=\s*\)0/\11/' "$BOARD_CONFIG_PATH"
          echo "Contents after modification:"
          cat "$BOARD_CONFIG_PATH"
        else
          echo "ERROR: Board config file $BOARD_CONFIG_PATH not found!"
          exit 1
        fi

    - name: Install ESP-IDF Toolchain via Submodule Script
      working-directory: ${{ github.workspace }}/ports/espressif
      run: |
        echo "Installing ESP-IDF tools for target esp32s3 using submodule's install.sh..."
        ./esp-idf/install.sh esp32s3

    - name: Build Firmware
      working-directory: ${{ github.workspace }}/ports/espressif
      run: |
        echo "Sourcing ESP-IDF environment and building for board: ${{ steps.board_info.outputs.name }}"
        source ./esp-idf/export.sh
        make BOARD=${{ steps.board_info.outputs.name }} -j$(nproc)

    - name: Upload Firmware Artifacts (BIN only)
      uses: actions/upload-artifact@v4
      with:
        name: firmware-bin-${{ steps.board_info.outputs.name }}-${{ steps.cp_version.outputs.version }}
        path: |
          ${{ github.workspace }}/ports/espressif/build-${{ steps.board_info.outputs.name }}/bootloader/bootloader.bin
          ${{ github.workspace }}/ports/espressif/build-${{ steps.board_info.outputs.name }}/partition_table/partition-table.bin
          ${{ github.workspace }}/ports/espressif/build-${{ steps.board_info.outputs.name }}/circuitpython.bin
        if-no-files-found: error
